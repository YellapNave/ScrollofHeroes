{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/db.service.ts","webpack:///src/app/hero-detail/hero-detail.component.ts","webpack:///src/app/hero-detail/hero-detail.component.html","webpack:///src/app/hero-search/hero-search.component.ts","webpack:///src/app/hero-search/hero-search.component.html","webpack:///src/app/hero.service.ts","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/message.service.ts","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","dbService","title","initDb","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","heroService","heroes","getHeroes","subscribe","slice","DbService","client","initializeDefaultAppClient","db","getServiceClient","factory","heroesChapter","collection","auth","loginWithCredential","providedIn","HeroDetailComponent","route","location","getHero","snapshot","paramMap","get","hero","back","updateHero","goBack","save","HeroSearchComponent","searchTerms","term","next","heroes$","pipe","searchHeroes","search","HeroService","messageService","find","toArray","_","log","handleError","findOne","updateOne","$set","player","class","level","ancestry","$currentDate","lastModified","insertOne","deleteOne","trim","name","$regex","$options","x","length","operation","result","error","console","message","add","HeroesComponent","Math","max","map","addHero","filter","h","deleteHero","MessageService","messages","push","MessagesComponent","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n\nconst routes: Routes = [\n  { path: 'heroes', component: HeroesComponent },\n  { path: 'dashboard', component: DashboardComponent},\n  { path: 'detail/:id', component: HeroDetailComponent},\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { DbService } from './db.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Scroll of Heroes';\r\n\r\n  constructor(private dbService: DbService) {}\r\n\r\n  ngOnInit() {\r\n    this.dbService.initDb();\r\n  }\r\n}\r\n","<h1>{{title}}</h1>\n<nav>\n    <a routerLink=\"/dashboard\">Dashboard</a>\n    <a routerLink=\"/heroes\">Heroes</a>\n</nav>\n<router-outlet></router-outlet>\n<app-messages></app-messages>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeroesComponent } from './heroes/heroes.component';\r\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HeroSearchComponent } from './hero-search/hero-search.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeroesComponent,\r\n    HeroDetailComponent,\r\n    MessagesComponent,\r\n    DashboardComponent,\r\n    HeroSearchComponent,\r\n    ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[] = [];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit(): void {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n      .subscribe(heroes => this.heroes = heroes.slice(1, 5));\n  }\n\n}\n","<h3>Top Heroes</h3>\n<div class=\"grid grid-pad\">\n    <a *ngFor=\"let hero of heroes\" class=\"col-1-4\"\n        routerLink=\"/detail/{{hero.id}}\">\n        <div class=\"module hero\">\n            <h4>{{hero.name}}</h4>\n        </div>\n    </a>\n</div>\n\n<app-hero-search></app-hero-search>","import { Injectable, OnInit } from '@angular/core';\r\nimport {\r\n  Stitch,\r\n  RemoteMongoClient,\r\n  RemoteMongoDatabase,\r\n  StitchAppClient,\r\n  AnonymousCredential,\r\n  RemoteMongoCollection\r\n} from 'mongodb-stitch-browser-sdk';\r\nimport { Hero } from './hero'\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DbService {\r\n  db: RemoteMongoDatabase;\r\n  client: StitchAppClient;\r\n  heroesChapter: RemoteMongoCollection<Hero>;\r\n\r\n  initDb() {\r\n    this.client = Stitch.initializeDefaultAppClient('scrollofheroes-egril');\r\n\r\n    this.db = this.client\r\n                    .getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas')\r\n                    .db('scroll');\r\n    \r\n    this.heroesChapter = this.db.collection<Hero>('heroes');\r\n  }\r\n\r\n  ngOninit() {\r\n    this.client.auth.loginWithCredential(new AnonymousCredential());\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: ['./hero-detail.component.scss']\n})\n\nexport class HeroDetailComponent implements OnInit {\n  @Input() hero: Hero;\n\n  constructor(\n    private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location) { }\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  getHero(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.heroService.getHero(id)\n      .subscribe(hero => this.hero = hero);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    this.heroService.updateHero(this.hero)\n      .subscribe(() => this.goBack());\n  }\n\n}\n","\r\n<div *ngIf=\"hero\">\r\n    <h2>{{hero.name | uppercase}} Details</h2>\r\n    <div><span>id: </span>{{hero.id}}</div>\r\n    <div>\r\n        <label>Name: \r\n            <input [(ngModel)]=\"hero.name\" placeholder=\"name\"/>\r\n        </label>\r\n    </div>\r\n    <div>\r\n        <label>Player: \r\n            <input [(ngModel)]=\"hero.player\" placeholder=\"player\"/>\r\n        </label>\r\n    </div>\r\n    <div>\r\n        <label>Ancestry:\r\n            <select [(ngModel)]=\"hero.ancestry\" placeholder=\"human\">\r\n                <option value='Bujyun'>Bujyun</option>\r\n                <option value='Goblin'>Goblin</option>\r\n                <option value='Grey'>Grey</option>\r\n                <option value='Human'>Human</option>\r\n                <option value='Niqqoth'>Niqqoth</option>\r\n                <option value='Rokhos'>Rokhos</option>\r\n                <option value='Sylvan'>Sylvan</option>\r\n            </select>\r\n        </label> \r\n    </div>\r\n    <div>\r\n        <label>Class: \r\n            <select [(ngModel)]=\"hero.class\" placeholder=\"class\">\r\n                <option value='Alchemist'>Alchemist</option>\r\n                <option value='Barbarian'>Barbarian</option>\r\n                <option value='Bard'>Bard</option>\r\n                <option value='Champion'>Champion</option>\r\n                <option value='Cleric'>Cleric</option>\r\n                <option value='Druid'>Druid</option>\r\n                <option value='Fighter'>Fighter</option>\r\n                <option value='Monk'>Monk</option>\r\n                <option value='Ranger'>Ranger</option>\r\n                <option value='Rogue'>Rogue</option>\r\n                <option value='Sorcerer'>Sorcerer</option>\r\n                <option value='Wizard'>Wizard</option>\r\n            </select>\r\n        </label>\r\n    </div>\r\n    <div>\r\n        <label>Level: \r\n            <input [(ngModel)]=\"hero.level\" placeholder=\"1\"/>\r\n        </label>\r\n    </div>\r\n</div>\r\n<button (click)=\"goBack()\">Back</button>\r\n<button (click)=\"save()\">Save</button>","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n  debounceTime, distinctUntilChanged, switchMap, debounce\n} from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: ['./hero-search.component.scss']\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {}\n\n  // Push a search term into the observable stream\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms\n      .pipe(\n        // wait 300ms after each keystroke before consdering the term\n        debounceTime(300),\n\n        // ignore new term if same as previous term\n        distinctUntilChanged(),\n\n        // switch to new search observable each time the term changes\n        switchMap((term: string) => this.heroService.searchHeroes(term))\n      );\n  }\n\n}\n","<div id=\"search-component\">\n    <h4><label for=\"search-box\">Hero Search</label></h4>\n  \n    <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n  \n    <ul class=\"search-result\">\n      <li *ngFor=\"let hero of heroes$ | async\" >\n        <a routerLink=\"/detail/{{hero.id}}\">\n          {{hero.name}}\n        </a>\n      </li>\n    </ul>\n  </div>","import { Injectable, OnInit } from '@angular/core';\r\nimport { Observable, of, from } from 'rxjs';\r\nimport { MessageService } from './message.service';\r\nimport { Hero } from './hero';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { DbService } from './db.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HeroService {\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private dbService: DbService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.dbService.initDb();\r\n  }\r\n  // GET: pull down heroes from database\r\n  getHeroes(): Observable<Hero[]> {\r\n    return from(this.dbService.heroesChapter.find().toArray())\r\n      .pipe(\r\n        tap(_ => this.log('fetched heroes')),\r\n        catchError(this.handleError<Hero[]>('getHeroes', []))\r\n      );\r\n  }\r\n\r\n  // GET: Pull down hero from database\r\n  getHero(id: number): Observable<Hero> {\r\n    return from(this.dbService.heroesChapter.findOne({\"id\": id}))\r\n      .pipe(\r\n        tap(_ => this.log(`fetched hero id=${id}`)),\r\n        catchError(this.handleError<Hero>(`getHero id=${id}`))\r\n      );\r\n  }\r\n\r\n  // PUT: Update the hero on the server\r\n  updateHero (hero: Hero): Observable<Hero> {\r\n    return from(this.dbService.heroesChapter\r\n      .updateOne(\r\n        {\"id\": hero.id}, {\r\n          $set: {\r\n                  player: hero.player,\r\n                  class: hero.class,\r\n                  level: hero.level,\r\n                  ancestry: hero.ancestry\r\n                },\r\n         $currentDate: { lastModified: true }\r\n        }))\r\n        .pipe(\r\n          tap(_ => this.log(`updated hero id=${hero.id}`)),\r\n          catchError(this.handleError<any>('updateHero'))\r\n        );\r\n  }\r\n\r\n  // POST: Add a new hero to the server\r\n  addHero (hero: Hero) {\r\n    return from(this.dbService.heroesChapter.insertOne(hero))\r\n      .pipe(\r\n        tap(_ => this.log(`updated hero id=${hero.id}`)),\r\n        catchError(this.handleError<Hero>('addHero'))\r\n      );\r\n  }\r\n\r\n  // DELETE: Delete the hero from the server\r\n  deleteHero (hero: Hero | number) {\r\n    const id = typeof hero === 'number' ? hero : hero.id;\r\n    from(this.dbService.heroesChapter.deleteOne({\"id\": id}))\r\n      .pipe(\r\n        tap(_ => this.log(`deleted hero id=${id}`)),\r\n        catchError(this.handleError<Hero>('deleteHero'))\r\n      )\r\n  }\r\n\r\n  // GET: Get hero whose name contains search term\r\n  searchHeroes (term: string): Observable<Hero[]> {\r\n    if (!term.trim()) {\r\n      // if search term is falsy, return empty hero array\r\n      return of([]);\r\n    }\r\n    return from(this.dbService.heroesChapter\r\n            .find({name: {$regex: `^${term}`, $options: \"i\"}})\r\n            .toArray())\r\n              .pipe(\r\n                tap(x => x.length ?\r\n                  this.log(`found heroes matching \"${term}\"`) :\r\n                  this.log(`no heroes matching \"${term}\"`)),\r\n                catchError(this.handleError<Hero[]>('searchHeroes', []))\r\n              );\r\n  }\r\n\r\n  private handleError<T> (operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead for now\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    }\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.messageService.add(`HeroService: ${message}`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Hero } from '../hero';\r\nimport { HeroService } from '../hero.service';\r\nimport { MessageService } from '../message.service';\r\nimport { Long, serialize, deserialize } from 'bson';\r\n\r\n@Component({\r\n  selector: 'app-heroes',\r\n  templateUrl: './heroes.component.html',\r\n  styleUrls: ['./heroes.component.scss']\r\n})\r\n\r\nexport class HeroesComponent implements OnInit {\r\n  heroes: Hero[];\r\n\r\n  constructor(private heroService: HeroService, private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getHeroes();\r\n  }\r\n\r\n  getHeroes(): void {\r\n    this.heroService.getHeroes()\r\n      .subscribe(heroes => this.heroes = heroes);\r\n  }\r\n\r\n  add(name: string): void {\r\n    name = name.trim();\r\n    if (!name) { return; }\r\n    const id = this.heroes.length > 0 ? \r\n      Math.max(...this.heroes.map(hero => hero.id)) + 1 :\r\n      1;\r\n    this.heroService.addHero({ name, id } as Hero);\r\n  }\r\n\r\n  delete(hero: Hero): void {\r\n    this.heroes = this.heroes.filter(h => h !== hero);\r\n    this.heroService.deleteHero(hero);\r\n  }\r\n\r\n}\r\n","<h2>My Heroes</h2>\n<div>\n    <label>Hero name:\n        <input #heroName>\n    </label>\n    <!-- (click) passes input value to add() and then clears the input -->\n    <button (click)=\"add(heroName.value); heroName.value=''\">\n        add\n    </button>\n</div>\n<ul class=\"heroes\">\n    <li *ngFor=\"let hero of heroes\">\n        <a routerLink=\"/detail/{{hero.id}}\">\n            <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n        </a>\n        <button class=\"delete\" title=\"delete hero\"\n            (click)=\"delete(hero)\">X</button>\n    </li>\n</ul>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"messageService.messages.length\">\n    <h2>Messages</h2>\n    <button class=\"clear\"\n        (click)=\"messageService.clear()\">clear</button>\n    <div *ngFor='let message of messageService.messages'>{{message}}</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}